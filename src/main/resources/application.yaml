spring:
  application:
    name: product-catalog-spring-boot

  r2dbc:
    url: r2dbc:postgresql://${POSTGRES_HOST:localhost}:5432/product_catalog
    username: postgres
    password: postgres

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  jpa:
    hibernate:
      ddl-auto: create


server:
  port: 8080

management:
  tracing:
    enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true
    tags:
      application: ${spring.application.name}
  server:
    port: 8081
    context-path: /actuator

  otlp:
    metrics:
      export:
        url: http://${OTEL_COLLECTOR_HOST:localhost}:${OTEL_COLLECTOR_PORT:4318}/v1/metrics
        step: 15s

otel:
  propagators:
    - tracecontext
  exporter:
    otlp:
      endpoint: http://${OTEL_COLLECTOR_HOST:localhost}:${OTEL_COLLECTOR_PORT:4318}
      protocol: http/protobuf